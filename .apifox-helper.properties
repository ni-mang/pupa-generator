
# \u6807\u8BB0\u63A5\u53E3status
#released/deprecated
api.status=#status

# \u5F53\u63A5\u53E3\u6DFB\u52A0@Deprecated\u6CE8\u89E3\u65F6\uFF0C\u6587\u6863\u4E0A\u4F53\u73B0\u4E3A\u201C\u5E9F\u5F03
api.status[@java.lang.Deprecated]=deprecated

# \u7528\u4E8E\u8BBE\u7F6E\u4F7F\u7528@see\u679A\u4E3E\u7C7B\u578B\u65F6\u7684\u9ED8\u8BA4\u53D6\u503C\u5B57\u6BB5
enum.use.custom=code

# \u8BBE\u7F6E\u53C2\u6570\u9ED8\u8BA4\u503C
param.default.value=#default

# \u7528\u4E8E\u751F\u6210apifox\u76F8\u5173mock\u4FE1\u606F
field.mock=#mock

# \u5FFD\u7565\u5B57\u6BB5(\u8BBE\u7F6E\u67D0\u4E9B\u5B57\u6BB5\u4E0D\u51FA\u73B0\u5728json\u4E2D,\u6216\u4E0D\u9700\u8981\u8BF7\u6C42\u65F6\u7ED9\u51FA)
field.ignore=@com.fasterxml.jackson.annotation.JsonIgnore#value

# \u65E5\u671F\u7C7B\u578Bmock
java_date_types=["java.util.Date","java.sql.Timestamp","java.time.LocalDate","java.time.LocalDateTime"]
java_date_time_types=["java.util.Date","java.sql.Timestamp","java.time.LocalDateTime"]
field.mock[groovy:${java_date_time_types}.contains(it.type().name())&&it.jsonType().name()=="java.lang.String"] = groovy:"@datetime(\"yyyy-MM-dd HH:mm:ss\")"
field.mock[groovy:it.type().name()=="java.time.LocalDate"&&it.jsonType().name()=="java.lang.String"] = groovy:"@date(\"yyyy-MM-dd\")"
field.mock[groovy:${java_date_types}.contains(it.type().name())&&it.jsonType().name()=="java.lang.Long"] = groovy:"@timestamp@string(\"number\", 3)"

# \u5E03\u5C14\u7C7B\u578Bmock
field.mock[groovy:it.type().name()=="java.lang.Boolean"] = groovy:"@boolean"

# Pattern\u6B63\u5219\u68C0\u9A8Cmock
field.mock[@javax.validation.constraints.Pattern]=groovy:"@regexp(/"+ it.ann("javax.validation.constraints.Pattern","regexp") +"/)"

# \u5B57\u7B26\u957F\u5EA6mock
field.mock[groovy:it.hasAnn("javax.validation.constraints.Size")]=groovy:"@string(" + it.ann("javax.validation.constraints.Size","min") + ", " + it.ann("javax.validation.constraints.Size","max") + ")"